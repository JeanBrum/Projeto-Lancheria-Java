

import java.util.Date;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author USER
 */

public class DialogCadProdutos extends javax.swing.JDialog {
    java.util.Date d = new java.util.Date(); 
    java.sql.Date dt = new java.sql.Date (d.getTime());
    static Connection con;
    /**
     * Creates new form DialogCadProdutos
     */
    public DialogCadProdutos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaDados = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPrecoCompra = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbFornecedor = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtResponsavel = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cbCategoria = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtUso = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtContatoFornecedor = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtEntregador = new javax.swing.JTextField();
        btnIncluir = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        dataVencimento = new com.toedter.calendar.JDateChooser();
        dataCompra = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Produtos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelaDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Nome do produto:", "Data de vencimento:", "Preço de compra:", "Quantidade:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaDadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaDados);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 620, 110));

        jLabel1.setText("* Nome do Produto:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));
        getContentPane().add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 150, -1));

        jLabel2.setText("* Preço de Compra:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, -1, -1));
        getContentPane().add(txtPrecoCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 150, -1));

        jLabel4.setText("* Quantidade:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 160, -1, -1));

        jLabel5.setText("* Data de Vencimento:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, -1));
        getContentPane().add(txtQuantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, 150, -1));

        jLabel6.setText("* Fornecedor:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, -1));

        cbFornecedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Languiru", "Dália", "Coca-Cola", "Fruki", "Mix Atacadista", "CEASA", "Sadia", "JBS", "COAMO" }));
        getContentPane().add(cbFornecedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 150, -1));

        jLabel7.setText("Cidade da Lancheria:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, -1, -1));
        getContentPane().add(txtCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 240, 150, -1));

        jLabel8.setText("Responsável pela compra:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, -1, -1));
        getContentPane().add(txtResponsavel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, 150, -1));

        jLabel9.setText("* Categoria:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 280, -1, -1));

        cbCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fruta", "Carne", "Legume", "Folha", "Alimento enlatado", "Alimento artificial", "Molho", "Limpeza" }));
        getContentPane().add(cbCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 300, 150, -1));

        jLabel10.setText("* Uso do produto:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, -1, -1));
        getContentPane().add(txtUso, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 150, -1));

        jLabel3.setText("* Data de compra:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, -1));

        jLabel11.setText("Contato do Fornecedor:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 340, -1, -1));
        getContentPane().add(txtContatoFornecedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, 150, -1));

        jLabel12.setText("Entregador:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 340, -1, -1));
        getContentPane().add(txtEntregador, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 360, 150, -1));

        btnIncluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-add-24.png"))); // NOI18N
        btnIncluir.setText("Incluir");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });
        getContentPane().add(btnIncluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 180, 100, -1));

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-new-file-24.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        getContentPane().add(btnNovo, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 240, 100, -1));

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-change-24.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAlterar, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 300, 100, -1));

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-delete-24.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(btnExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 360, 100, -1));

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8-close-window-24.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 440, 100, -1));
        getContentPane().add(dataVencimento, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 150, -1));
        getContentPane().add(dataCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 150, -1));

        jLabel13.setText("O * significa que o produto é obrigatório!");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        setSize(new java.awt.Dimension(656, 519));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        String sql = "INSERT INTO produtos (nome, precocompra, quantidade, vencimento, responsavelcompra, cidadelancheria, fornecedor, uso, categoria, datacompra, contatofornecedor, entregador) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        if (validarCampos() == true){
            try {
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, txtNome.getText());
                ps.setDouble(2, Double.parseDouble(txtPrecoCompra.getText()));
                ps.setInt(3, Integer.parseInt(txtQuantidade.getText()));
                ps.setString(4, formato.format(dataVencimento.getDate()));
                ps.setString(5, txtResponsavel.getText());
                ps.setString(6, txtCidade.getText());
                ps.setString(7, cbFornecedor.getSelectedItem().toString());
                ps.setString(8, txtUso.getText());
                ps.setString(9, cbCategoria.getSelectedItem().toString());
                ps.setString(10, formato.format(dataCompra.getDate()));
                ps.setString(11, txtContatoFornecedor.getText());
                ps.setString(12, txtEntregador.getText());
                ps.execute();
                ps.close();
                mostrarDados();
                limparCampos();
                JOptionPane.showMessageDialog(null, "Inserido com sucesso!");
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Algum dos campos obrigatórios está vazio!");
        }
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        try {
            con = DriverManager.getConnection("jdbc:sqlite:banco.db");
            mostrarDados();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        int linha = tabelaDados.getSelectedRow();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        if (linha >= 0) {
        String sql = "UPDATE produtos SET nome=? , precocompra=?, quantidade=?, vencimento=?, responsavelcompra=?, cidadelancheria=?, fornecedor=?, uso=?, categoria=?, datacompra=?, contatofornecedor=?, entregador=? WHERE id = ?" ;
        if (validarCampos() == true) {
            try {
                
                    PreparedStatement ps = con.prepareStatement(sql);
                    ps.setString(1, txtNome.getText());
                    ps.setDouble(2, Double.parseDouble(txtPrecoCompra.getText()));
                    ps.setInt(3, Integer.parseInt(txtQuantidade.getText()));
                    ps.setString(4, formato.format(dataVencimento.getDate()));
                    ps.setString(5, txtResponsavel.getText());
                    ps.setString(6, txtCidade.getText());
                    ps.setString(7, cbFornecedor.getSelectedItem().toString());
                    ps.setString(8, txtUso.getText());
                    ps.setString(9, cbCategoria.getSelectedItem().toString());
                    ps.setString(10, formato.format(dataCompra.getDate()));
                    ps.setString(11, txtContatoFornecedor.getText());
                    ps.setString(12, txtEntregador.getText());
                    ps.setString(13, tabelaDados.getValueAt(linha, 0).toString());
                    ps.execute();
                    ps.close();
                    mostrarDados();
                    JOptionPane.showMessageDialog(null, "Alterado com sucesso!");
                
            } catch (Exception e) {
                e.printStackTrace();
            }
            } else {
            
                }
        
        
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum produto foi selecionado!");
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void tabelaDadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaDadosMouseClicked
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        int linha = tabelaDados.getSelectedRow();
        
        if (linha >= 0) {
            txtNome.setText(tabelaDados.getValueAt(linha, 1).toString());
            txtPrecoCompra.setText(tabelaDados.getValueAt(linha, 3).toString());
            txtQuantidade.setText(tabelaDados.getValueAt(linha, 4).toString());           
        }
    }//GEN-LAST:event_tabelaDadosMouseClicked

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int linha = tabelaDados.getSelectedRow();
        
        if (linha >= 0) {
            if (JOptionPane.showConfirmDialog(null, "Tem certeza que deseja remover este produto?") == 0) {
                try {
                    PreparedStatement ps = con.prepareStatement("DELETE FROM produtos WHERE id=?");
                        ps.setString(1, tabelaDados.getValueAt(linha, 0).toString());
                        ps.execute();
                        ps.close();
                        mostrarDados();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum produto foi selecionado!");
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogCadProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogCadProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogCadProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogCadProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogCadProdutos dialog = new DialogCadProdutos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
        

    }
    
            private boolean validarCampos() {
                if ((txtNome.getText().trim().length() == 0) || (txtPrecoCompra.getText().trim().length() == 0) || 
                        (txtQuantidade.getText().trim().length() == 0) || (dataVencimento.getDate().toString().length() == 0) ||
                        (txtUso.getText().trim().length() == 0) || (dataCompra.getDate().toString().length() == 0) ){
                    return false;
                } 
                    try {
                double custo = Double.parseDouble(txtPrecoCompra.getText());
                int qtde = Integer.parseInt(txtQuantidade.getText());
                
            } catch (Exception e) {
                return false;
            }
                return true;
            }
            private void limparCampos(){
                
                
                txtCidade.setText("");
                txtContatoFornecedor.setText("");
                txtEntregador.setText("");
                txtNome.setText("");
                txtPrecoCompra.setText("");
                txtQuantidade.setText("");
                txtResponsavel.setText("");
                txtUso.setText("");
                cbCategoria.setSelectedIndex(0);
                cbFornecedor.setSelectedIndex(0);
                txtNome.grabFocus();
            }
            
            private void mostrarDados(){
                try {
                    PreparedStatement ps = con.prepareStatement("SELECT * FROM produtos");
                    ResultSet rs = ps.executeQuery();
                    DefaultTableModel model = (DefaultTableModel) tabelaDados.getModel();
                    model.setRowCount(0);
                    
                    while (rs.next()) {
                        Object linha[] = {rs.getString("id"), rs.getString("nome"), rs.getString("vencimento"), rs.getString("precocompra"), rs.getString("quantidade")
                        };
                        model.addRow(linha);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                
            }
            


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<String> cbCategoria;
    private javax.swing.JComboBox<String> cbFornecedor;
    private com.toedter.calendar.JDateChooser dataCompra;
    private com.toedter.calendar.JDateChooser dataVencimento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tabelaDados;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtContatoFornecedor;
    private javax.swing.JTextField txtEntregador;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPrecoCompra;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtResponsavel;
    private javax.swing.JTextField txtUso;
    // End of variables declaration//GEN-END:variables
}
